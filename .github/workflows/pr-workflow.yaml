name: Feature Branch Lifecycle Workflow

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Select which feature action to run'
        required: true
        type: choice
        options:
          - start
          - finish
          - resume
      branch_name:
        description: 'Enter the name of the branch to operate on (without feature/ prefix)'
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write

env:
  GH_TOKEN: '${{ github.token }}'
  IKMDEVOPS_PAT: '${{secrets.IKMDEVOPS_PAT_TOKEN}}'
  BRANCH_NAME: 'feature/${{ github.event.inputs.branch_name }}'
  DEFAULT_VERSION: '1.0.0'
  UNIQUE_VERSION: '1.0.0-unique'

jobs:
  start-feature:
    if: ${{ github.event.inputs.action == 'start' }}
    runs-on: ubuntu-24.04
    name: Start Feature Job

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'zulu'

      - name: Check if PR exists
        id: check_pr
        uses: actions/github-script@v6
        with:
          script: |
            const forkOwner = context.payload.repository.owner.login;
            const branchName = process.env.BRANCH_NAME;
            const { data: pulls } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${forkOwner}:${branchName}`,
              state: 'open',
            });
            if (pulls.length > 0) {
              core.setFailed(`PR from branch ${branchName} already exists.`);
            }

      - name: Create and push changes
        if: ${{ github.event.inputs.action == 'start' }}
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git checkout -b $BRANCH_NAME
  
          # Modify pom.xml to change version to UNIQUE_VERSION
          sed -i 's|<version>.*</version>|<version>'$UNIQUE_VERSION'</version>|' pom.xml
  
          git add pom.xml
          git commit -m "Update maven coordinates to unique version"
          git push origin $BRANCH_NAME

      - name: Create draft PR
        if: ${{ github.event.inputs.action == 'start' }}
        uses: actions/github-script@v6
        with:
          script: |
            const forkOwner = context.payload.repository.owner.login;
            const branchName = process.env.BRANCH_NAME;
            const pr = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${forkOwner}:${branchName}`,
              base: 'main',
              title: 'Update maven coordinates to unique version',
              body: 'This PR updates the maven coordinates to a unique version.',
              draft: true,
            });
            core.setOutput('pr_number', pr.data.number);

  finish-feature:
    if: ${{ github.event.inputs.action == 'finish' }}
    runs-on: ubuntu-24.04
    name: Finish Feature Job

    steps:
      - name: Find PR
        id: find_pr
        uses: actions/github-script@v6
        with:
          script: |
            const forkOwner = context.payload.repository.owner.login;
            const branchName = process.env.BRANCH_NAME;
            const { data: pulls } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${forkOwner}:${branchName}`,
              state: 'open',
            });
            if (pulls.length === 0) {
              core.setFailed(`No open PR found from branch ${branchName}.`);
            } else {
              core.setOutput('pr_number', pulls[0].number);
            }

      - name: Set PR to ready for review
        uses: actions/github-script@v6
        with:
          script: |
            const pr_number = ${{ steps.find_pr.outputs.pr_number }};
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr_number,
              draft: false,
            });

      - name: Modify pom.xml and push changes
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git checkout $BRANCH_NAME
  
          # Modify pom.xml to change version to DEFAULT_VERSION
          sed -i 's|<version>.*</version>|<version>'$DEFAULT_VERSION'</version>|' pom.xml
  
          git add pom.xml
          git commit -m "Revert maven coordinates to default version"
          git push origin $BRANCH_NAME

  resume-feature:
    if: ${{ github.event.inputs.action == 'resume' }}
    runs-on: ubuntu-24.04
    name: Resume Feature Job

    steps:
      - name: Find PR
        id: find_pr
        uses: actions/github-script@v6
        with:
          script: |
            const forkOwner = context.payload.repository.owner.login;
            const branchName = process.env.BRANCH_NAME;
            const { data: pulls } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${forkOwner}:${branchName}`,
              state: 'open',
            });
            if (pulls.length === 0) {
              core.setFailed(`No open PR found from branch ${branchName}.`);
            } else {
              const pr = pulls[0];
              if (pr.draft) {
                core.setFailed(`PR #${pr.number} is already in draft state.`);
              } else {
                core.setOutput('pr_number', pr.number);
              }
            }

      - name: Set PR to draft
        uses: actions/github-script@v6
        with:
          script: |
            const pr_number = ${{ steps.find_pr.outputs.pr_number }};
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr_number,
              draft: true,
            });

      - name: Modify pom.xml and push changes
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git checkout $BRANCH_NAME
  
          # Modify pom.xml to change version to UNIQUE_VERSION
          sed -i 's|<version>.*</version>|<version>'$UNIQUE_VERSION'</version>|' pom.xml
  
          git add pom.xml
          git commit -m "Update maven coordinates to unique version"
          git push origin $BRANCH_NAME
